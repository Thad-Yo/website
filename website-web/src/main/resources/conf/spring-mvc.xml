<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 扫描文件（自动注入） -->
	<context:component-scan base-package="com.website">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
	</context:component-scan>

	<mvc:annotation-driven />

	<!-- 对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />

	<!-- 全局变量以便可以获得对应的注入bean -->
	<bean id="springContextHolder" class="com.website.common.util.spring.SpringContextHolder" />

	<!-- 支持上传文件 -->
	<bean id="commonsMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>

		<property name="favorParameter" value="false" />

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/jsp/"/>
					<property name="suffix" value=".jsp"/>
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- for application/xml -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
					</property>
				</bean>
			</list>
		</property>

	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">WEB-INF/jsp/errors/error_fileupload</prop>
				<!-- 处理其它异常(包括Controller抛出的) -->
				<prop key="java.lang.Throwable">WEB-INF/jsp/errors/500</prop>
			</props>
		</property>
	</bean>

	<!--&lt;!&ndash; 配置国际化资源文件路径 &ndash;&gt;-->
	<!--<bean id="messageSource"-->
		<!--class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
		<!--<property name="basenames">-->
			<!--<list>-->
				<!--&lt;!&ndash; 定义消息资源文件的相对路径 &ndash;&gt;-->
				<!--<value>classpath:properties/message/message</value>-->
			<!--</list>-->
		<!--</property>-->
		<!--&lt;!&ndash; 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  &ndash;&gt;               -->
    	<!--<property name="useCodeAsDefaultMessage" value="true" /> -->
		<!--<property name="fileEncodings" value="utf-8"/>-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; 基于Cookie的本地化解析器 &ndash;&gt;-->
	<!--<bean id="localeResolver"-->
		<!--class="org.springframework.web.servlet.i18n.CookieLocaleResolver">-->
		<!--<property name="cookieMaxAge" value="604800" />-->
		<!--<property name="defaultLocale" value="zh_CN" />-->
		<!--<property name="cookieName" value="Language"></property>-->
	<!--</bean>-->

	<!-- AOP式方法级权限检查 -->
	<aop:config proxy-target-class="true"/>


	<!-- 启动对@AspectJ注解的支持  -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>-->

	<!-- 配置tiles模板 -->
	<bean id="tilesConfigurer"
		  class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
</beans>