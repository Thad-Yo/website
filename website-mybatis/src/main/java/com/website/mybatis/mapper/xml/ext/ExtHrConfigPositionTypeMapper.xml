<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.website.mybatis.mapper.ext.ExtHrConfigPositionTypeMapper">
	<resultMap id="BaseResultMap" type="com.website.mybatis.bean.auto.HrConfigPositionType">
<!-- 	    <id column="id" property="Id" jdbcType="BIGINT" />
	    <result column="user_id" property="userId" jdbcType="VARCHAR" />
	    <result column="name_cn" property="empName" jdbcType="VARCHAR" />
	    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
	    <result column="phone_mobile" property="mobile" jdbcType="VARCHAR" />
	    <result column="position_name" property="empPosition" jdbcType="VARCHAR" />
	    <result column="branch_name" property="empBranch" jdbcType="VARCHAR" />
	    <result column="department_name" property="empDepartment" jdbcType="VARCHAR" />
	    <result column="phone_office" property="phoneOffice" jdbcType="VARCHAR" />
	    <result column="qq_number" property="qqNumber" jdbcType="VARCHAR" />
	    <result column="wechat_number" property="wechatNumber" jdbcType="VARCHAR" />
	    <result column="email_person" property="emailPerson" jdbcType="VARCHAR" />
	    <result column="email_office" property="emailOffice" jdbcType="VARCHAR" /> -->
	    
	    <result column="id" property="id" jdbcType="INTEGER"/>
	    <result column="position_type_name" property="positionTypeName" jdbcType="VARCHAR"/>
	    <result column="position_type_code" property="positionTypeCode" jdbcType="VARCHAR"/>
	    <result column="notes" property="notes" jdbcType="VARCHAR"/>
	    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
	</resultMap>
	
	<select id="selectPositionTypeList" resultMap="BaseResultMap" parameterType="com.website.mybatis.bean.auto.HrConfigPositionType">
		select 
			id,position_type_name,position_type_code,notes
		from 
			hr_config_position_type t
		where 1=1 and t.del_flag = 0
		<if test="positionTypeName != null and positionTypeName != ''">
				and t.position_type_name like CONCAT('%',#{positionTypeName},'%')
		</if>
		<if test="delFlag != null and delFlag != ''">
				and t.del_flag like CONCAT('%',#{delFlag},'%')
		</if>
		
 		<if test="orderByClause != null">
            order by ${orderByClause}
        </if> 
        
        <if test="limitStart >= 0">
            limit #{limitStart} , #{limitEnd}
        </if>
	</select>
</mapper>